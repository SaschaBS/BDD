buildscript {
    ext.spring_boot_version = '1.5.7.RELEASE'
    ext.gebVersion = '1.1.1'
    ext.seleniumVersion = '3.0.0'
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

plugins {
    id "java"
    id "org.springframework.boot" version "1.5.7.RELEASE"
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

springBoot {
    mainClass = 'de.lineas.bddemo.Application' // tell Spring Boot where the main class is. Otherwise not booting.
}

dependencies {

    compile 'org.springframework.boot:spring-boot-starter-thymeleaf' // server-side model-view framework
    compile("org.springframework.boot:spring-boot-starter-data-rest") // use Rest Resources
    compile("org.springframework.boot:spring-boot-starter-data-jpa") // Database stuff
    compile("org.webjars:jquery:2.0.3-1") // jquery einfach einbinden! Yeah!

    runtime("org.hsqldb:hsqldb") // embedded database

    testCompile('org.chiknrice:concordion-spring-runner:0.0.1') // Runner to integrate Spring with Concordion
    testCompile('org.springframework.boot:spring-boot-starter-test') // makes @SpringBootTest possible
    testCompile ('org.concordion:concordion:2.1.1')
    testCompile('info.cukes:cucumber-java:1.2.4') // cucumber language for java
    testCompile('info.cukes:cucumber-junit:1.2.4') // RunWith(Cucumber.class) possible
    testCompile('info.cukes:cucumber-spring:1.2.4') // Spring automatically looks for features and StepDefs
    testCompile 'com.codeborne:selenide:4.6' // test Framework for UA tests
}

test {
    systemProperties['selenide.browser'] = 'chrome' // set chrome as the default browser in tests, because firefox refused to work. :-(
    testLogging.showStandardStreams = true   // display test output on console
    systemProperties['concordion.output.dir'] = "$reporting.baseDir/spec"  // write output to build/reports/spec
    outputs.upToDateWhen { false }   // force tests to run even if code hasn't changed
}